---
name: Minecraft Bedrock Tag

on:
  workflow_dispatch:
  schedule:
    - cron: "54 */6 * * *"

permissions:
  contents: read

jobs:
  build:
    name: Minecraft Bedrock Tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      # https://github.com/tyriis/bedrock-version-fetcher
      - name: Fetch Bedrock Version
        uses: tyriis/bedrock-version-fetcher@v3.0.1
        id: bedrock

      - name: PrintBedrock Version
        run: echo "Current Minecraft Bedrock version is ${{ steps.bedrock.outputs.version }}"

      # https://github.com/marketplace/actions/install-gh-cli
      - name: install github cli
        if: ${{ steps.bedrock.outputs.version }} != ${{ steps.get_latest_tag.outputs.tag }}
        uses: dev-hanz-ops/install-gh-cli-action@v0.1.0

      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Tools
        run: |
          brew install jq

      - name: get current release
        id: release
        run: echo "version=$(gh release view --json tagName | jq -r .tagName)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: print current release
        run: echo "Current Release is ${{ steps.release.outputs.version }}"

      - name: create release
        if: steps.bedrock.outputs.version != steps.release.outputs.version && steps.release.outputs.version != 'release not found'
        run: |
          echo "Updating to ${{ steps.bedrock.outputs.version }}"
          gh release create ${{ steps.bedrock.outputs.version }} --title ${{ steps.bedrock.outputs.version }} --notes "Minecraft Bedrock version ${{ steps.bedrock.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
